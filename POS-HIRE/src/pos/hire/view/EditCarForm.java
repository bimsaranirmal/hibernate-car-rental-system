/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pos.hire.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pos.hire.Controller.CarCategoryController;
import pos.hire.Controller.CarController;
import pos.hire.Dto.CarCategoryDto;
import pos.hire.Dto.CarDto;
import pos.hire.Dto.CustomerDto;

/**
 *
 * @author BIMSARA
 */
public class EditCarForm extends javax.swing.JPanel {
private CarController carController;
private CarCategoryController carCategoryController;

    /**
     * Creates new form EditCarFram
     */
    public EditCarForm() {
        carController = new CarController();
        carCategoryController = new CarCategoryController();
        initComponents();
        loadAllCars();
        loadAllCarCategorys();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        headerlabel = new javax.swing.JLabel();
        formPanel = new javax.swing.JPanel();
        carIdLabel = new javax.swing.JLabel();
        modelLabel = new javax.swing.JLabel();
        brandLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        vehicleNoLabel = new javax.swing.JLabel();
        vehicleNoText = new javax.swing.JTextField();
        pricePerDayLabel = new javax.swing.JLabel();
        pricePerDayText = new javax.swing.JTextField();
        availabilityLabel = new javax.swing.JLabel();
        availabilityCheckBox = new javax.swing.JCheckBox();
        brandComboBox = new javax.swing.JComboBox<>();
        yearComboBox = new javax.swing.JComboBox<>();
        cIdLable = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        carTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        categoryIdText = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        carCategoryTable = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        headerlabel.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        headerlabel.setText("Manage Car");
        headerlabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        headerlabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        formPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        modelLabel.setText("Category ID");

        brandLabel.setText("Brand");

        yearLabel.setText("Year");

        vehicleNoLabel.setText("Vehicle No");

        pricePerDayLabel.setText("Price Per Day");

        availabilityLabel.setText("Availability");

        availabilityCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        availabilityCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabilityCheckBoxActionPerformed(evt);
            }
        });

        brandComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        brandComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " 1", " 2", " 3", " 4" }));
        yearComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        carTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        carTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        carTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(carTable);

        addButton.setText("Save car");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update Car");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Reset");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Car Id");

        carCategoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        carCategoryTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        carCategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carCategoryTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(carCategoryTable);

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(carIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pricePerDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(cIdLable, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(vehicleNoText, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(116, 116, 116))
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pricePerDayText, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(clearButton))))
                            .addComponent(yearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vehicleNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(modelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoryIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(brandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(availabilityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(brandComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(availabilityCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)))
                .addContainerGap())
            .addGroup(formPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(cIdLable, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(modelLabel)
                                    .addComponent(brandLabel)
                                    .addComponent(brandComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(categoryIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(yearLabel)
                                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(availabilityLabel)))
                            .addComponent(availabilityCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vehicleNoLabel)
                            .addComponent(vehicleNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pricePerDayLabel)
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pricePerDayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(clearButton))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(carIdLabel)
                                .addGap(51, 51, 51)))
                        .addGap(188, 188, 188))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(updateButton))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headerlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(369, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(369, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(427, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(43, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void availabilityCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabilityCheckBoxActionPerformed
        availability();// TODO add your handling code here:
    }//GEN-LAST:event_availabilityCheckBoxActionPerformed

    private void carTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carTableMouseClicked
        searchCar();
    }//GEN-LAST:event_carTableMouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        addCar();
    }//GEN-LAST:event_addButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateCar();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearCar();// TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void carCategoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carCategoryTableMouseClicked
        searchCategory();// TODO add your handling code here:
    }//GEN-LAST:event_carCategoryTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JCheckBox availabilityCheckBox;
    private javax.swing.JLabel availabilityLabel;
    private javax.swing.JComboBox<String> brandComboBox;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JLabel cIdLable;
    private javax.swing.JTable carCategoryTable;
    private javax.swing.JLabel carIdLabel;
    private javax.swing.JTable carTable;
    private javax.swing.JTextField categoryIdText;
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel formPanel;
    private javax.swing.JLabel headerlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JLabel pricePerDayLabel;
    private javax.swing.JTextField pricePerDayText;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel vehicleNoLabel;
    private javax.swing.JTextField vehicleNoText;
    private javax.swing.JComboBox<String> yearComboBox;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
private void loadAllCars() {
        try {
            String[] collumns = {"carId","CategoryID", "PricePerDay", "Brand",  "VehicleNo", "Year", "Availability"};
            DefaultTableModel dtm = new DefaultTableModel(collumns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            carTable.setModel(dtm);

            ArrayList<CarDto> cars = carController.getAllCars();

             for (CarDto car : cars) {
                 
            String availability = car.getAvailability() ? "available" : "not available"; // Convert boolean to text
            Object[] rowData = {car.getId(),car.getCategoryid(), car.getPricePerDay(), car.getBrand(), car.getVehicleNumber(), car.getYear(), availability};
            dtm.addRow(rowData);
        }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(CarPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

   

    private void updateCar() {
        try {
            CarDto carDto = new CarDto(cIdLable.getText(),
                    
                    Double.parseDouble(pricePerDayText.getText()),
                    availabilityCheckBox.isSelected(),
                    (String) brandComboBox.getSelectedItem(),
                    
                    vehicleNoText.getText(),
                    (String) yearComboBox.getSelectedItem(),
            categoryIdText.getText());

            String result = carController.updateCar(carDto);
            JOptionPane.showMessageDialog(this, result);
            clear();
            loadAllCars();
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(EditCarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void addCar() {

        try {
             String cId = cIdLable.getText();
        String pricePerDayTextValue = pricePerDayText.getText();
        boolean availability = availabilityCheckBox.isSelected();
        String brand = (String) brandComboBox.getSelectedItem();
        String vehicleNo = vehicleNoText.getText();
        String year = (String) yearComboBox.getSelectedItem();
        String categoryId = categoryIdText.getText();
        
        // Check for null values
        if (cId == null || pricePerDayTextValue == null || brand == null || year == null || categoryId == null) {
            JOptionPane.showMessageDialog(this, "Input fields cannot be null.");
            return; // Exit the method early if any input is null.
        }
        
        if (vehicleNo.length() > 8) {
            JOptionPane.showMessageDialog(this, "Vehicle number cannot exceed 8 characters.");
            return; // Exit the method early if the length is exceeded.
        }

        CarDto carDto = new CarDto(cId, Double.parseDouble(pricePerDayTextValue), availability, brand, vehicleNo, year, categoryId);

            String result = carController.addCar(carDto);
            JOptionPane.showMessageDialog(this, result);
            clear();

            loadAllCars();
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(EditCarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void searchCar() {
        try {
            String carId = carTable.getValueAt(carTable.getSelectedRow(), 0).toString();
            CarDto carDto = carController.getCar(carId);

            if (carDto != null) {
                cIdLable.setText(carDto.getId());
                pricePerDayText.setText(Double.toString(carDto.getPricePerDay()));
                availabilityCheckBox.setSelected(carDto.getAvailability());
                brandComboBox.setSelectedItem(carDto.getBrand());
                //modelComboBox.setSelectedItem(carDto.getModel());
                vehicleNoText.setText(carDto.getVehicleNumber());
                yearComboBox.setSelectedItem(carDto.getYear());
                categoryIdText.setText(carDto.getCategoryid());

                loadAllCars();
            } else {
                JOptionPane.showMessageDialog(this, "Car Not Found");
            }

        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(EditCarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void clear() {
        cIdLable.setText("");
        brandComboBox.setSelectedItem("Item 1");
        
        yearComboBox.setSelectedItem("1");
        vehicleNoText.setText("");
        pricePerDayText.setText("");
        availabilityCheckBox.setSelected(false);
        categoryIdText.setText("");
    }

    

    private void clearCar() {
        cIdLable.setText("");
        brandComboBox.setSelectedItem("Item 1");
        //modelComboBox.setSelectedItem("Item 1");
        yearComboBox.setSelectedItem("1");
        vehicleNoText.setText("");
        pricePerDayText.setText("");
        availabilityCheckBox.setSelected(false);
        categoryIdText.setText("");
    }

    private void availability() {
     boolean isAvailable = availabilityCheckBox.isSelected();

    int availabilityColumnIndex = getColumnIndex("Availability"); // Get the index of the "Availability" column

    int selectedRowIndex = carTable.getSelectedRow();

    if (selectedRowIndex != -1 && availabilityColumnIndex != -1) {
        carTable.setValueAt(isAvailable ? "available" : "nonavailable", selectedRowIndex, availabilityColumnIndex);
    }
    }

    private int getColumnIndex(String availability) {
        for (int i = 0; i < carTable.getColumnCount(); i++) {
        if (carTable.getColumnName(i).equals(availability)) {
            return i;
        }
    }
    return -1;
    }
    
    private void loadAllCarCategorys() {
        try {
            String[] collumns = {"CategoryId", "CategoryName"};
            DefaultTableModel dtm = new DefaultTableModel(collumns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            carCategoryTable.setModel(dtm);

            ArrayList<CarCategoryDto> carCategorys = carCategoryController.getAllCarCategorys();

            for (CarCategoryDto carCategory : carCategorys) {
                Object[] rowData = {carCategory.getId(), carCategory.getCategoryName()};
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(CarCategoryPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void searchCategory() {
         try {
            String categoryId = carCategoryTable.getValueAt(carCategoryTable.getSelectedRow(), 0).toString();
            CarCategoryDto carCategoryDto = carCategoryController.getCarCategory(categoryId);

            if (carCategoryDto != null) {
                categoryIdText.setText(carCategoryDto.getId());
                

            } else {
                JOptionPane.showMessageDialog(this, "CarCategory Not Found");
            }

        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(EditCarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
}
