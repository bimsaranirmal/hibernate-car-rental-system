/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pos.hire.view;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pos.hire.Controller.CarController;
import pos.hire.Controller.RentalDetailController;
import pos.hire.Dto.CustomerDto;
import pos.hire.Dto.RentalDetailDto;

/**
 *
 * @author BIMSARA
 */
public class UpdateHirePanel extends javax.swing.JPanel {
    private RentalDetailController rentalController;
    private RentalDetailController rentalDetailController;
    private CarController carController;

    /**
     * Creates new form UpdateHirePanel
     */
    public UpdateHirePanel() {
        rentalController = new RentalDetailController();
        rentalDetailController = new RentalDetailController();
        carController = new CarController();
        initComponents();
        loadAllHires();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basePanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        headerlabel = new javax.swing.JLabel();
        formPanel = new javax.swing.JPanel();
        carIdLabel = new javax.swing.JLabel();
        rentSLabel = new javax.swing.JLabel();
        rentSText = new javax.swing.JTextField();
        perDayRentLabel = new javax.swing.JLabel();
        perDayRentText = new javax.swing.JTextField();
        rentELabel = new javax.swing.JLabel();
        rentText = new javax.swing.JTextField();
        totalLabel = new javax.swing.JLabel();
        totalText = new javax.swing.JTextField();
        advLabel = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        usernameLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        advText = new javax.swing.JTextField();
        carDataLabel = new javax.swing.JLabel();
        returnCheckBox = new javax.swing.JCheckBox();
        balenceText = new javax.swing.JTextField();
        refundText = new javax.swing.JTextField();
        idText = new javax.swing.JTextField();
        refundLabel = new javax.swing.JLabel();
        balanceLabel = new javax.swing.JLabel();
        date1Label = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        calButton = new javax.swing.JButton();
        balButton = new javax.swing.JButton();
        formPanel1 = new javax.swing.JPanel();
        custIdLabel = new javax.swing.JLabel();
        rentidLabel = new javax.swing.JLabel();
        rentidText = new javax.swing.JTextField();
        usernameLabel1 = new javax.swing.JLabel();
        idLabel1 = new javax.swing.JLabel();
        custDataLabel = new javax.swing.JLabel();
        custIdText = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        hireTable = new javax.swing.JTable();

        headerlabel.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        headerlabel.setText("Add Hire");
        headerlabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        headerlabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        formPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        carIdLabel.setText("Car Id");

        rentSLabel.setText("Rent Start Date");

        rentSText.setColumns(2);
        rentSText.setToolTipText("YYYY-MM-DD");
        rentSText.setActionCommand("<Not Set>");

        perDayRentLabel.setText("Per Day Rent");

        rentELabel.setText("Rent End Date");

        totalLabel.setText("Total Amount");

        advLabel.setText("Advance Pay");

        updateButton.setText("Update Rent");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        carDataLabel.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N

        returnCheckBox.setText("Return");
        returnCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnCheckBoxActionPerformed(evt);
            }
        });

        idText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextActionPerformed(evt);
            }
        });

        refundLabel.setText("Refund");

        balanceLabel.setText("Balence");

        date1Label.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        date1Label.setText("( YYYY-MM-DD )");

        dateLabel.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        dateLabel.setText("( YYYY-MM-DD )");

        calButton.setText("Calculate");
        calButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calButtonActionPerformed(evt);
            }
        });

        balButton.setText("Balance");
        balButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        balButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(refundText, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rentSText, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(advText, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addComponent(calButton)
                        .addGap(49, 49, 49)
                        .addComponent(returnCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(refundLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(carIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(rentSLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addGap(200, 200, 200)
                                        .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addGap(122, 122, 122)
                                                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(carDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addGap(156, 156, 156)
                                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(8, 8, 8)
                                                .addComponent(balenceText, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(balButton))
                                            .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addComponent(perDayRentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(4, 4, 4)
                                                .addComponent(perDayRentText, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(formPanelLayout.createSequentialGroup()
                                                .addComponent(rentELabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rentText, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(advLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 104, Short.MAX_VALUE)))
                .addContainerGap())
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(carIdLabel)
                            .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rentSLabel)
                            .addComponent(rentSText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rentELabel)
                            .addComponent(rentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addComponent(usernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(3, 3, 3)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(advLabel)
                    .addComponent(advText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perDayRentLabel)
                    .addComponent(perDayRentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refundLabel)
                    .addComponent(refundText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balanceLabel)
                    .addComponent(balenceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalLabel)
                        .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateButton)
                        .addComponent(calButton))
                    .addComponent(returnCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        formPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        custIdLabel.setText("Custormer Id");

        rentidLabel.setText("Rent Id");

        custDataLabel.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N

        custIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIdTextActionPerformed(evt);
            }
        });

        clearButton.setText("Reset");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formPanel1Layout = new javax.swing.GroupLayout(formPanel1);
        formPanel1.setLayout(formPanel1Layout);
        formPanel1Layout.setHorizontalGroup(
            formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanel1Layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(usernameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(formPanel1Layout.createSequentialGroup()
                        .addComponent(rentidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rentidText, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(idLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(custIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formPanel1Layout.createSequentialGroup()
                                .addComponent(custIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearButton))
                            .addGroup(formPanel1Layout.createSequentialGroup()
                                .addComponent(custDataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        formPanel1Layout.setVerticalGroup(
            formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanel1Layout.createSequentialGroup()
                .addGroup(formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanel1Layout.createSequentialGroup()
                        .addComponent(usernameLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(custIdLabel)
                                .addComponent(custIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(formPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(formPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rentidLabel)
                            .addComponent(rentidText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(custDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        hireTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        hireTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hireTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hireTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(hireTable);

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(headerlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                    .addComponent(formPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(formPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addComponent(headerlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout basePanelLayout = new javax.swing.GroupLayout(basePanel);
        basePanel.setLayout(basePanelLayout);
        basePanelLayout.setHorizontalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        basePanelLayout.setVerticalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateHire();// addUser();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void returnCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnCheckBoxActionPerformed
        returned();// TODO add your handling code here:
    }//GEN-LAST:event_returnCheckBoxActionPerformed

    private void idTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextActionPerformed

    private void calButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calButtonActionPerformed
        calTotal();// TODO add your handling code here:
    }//GEN-LAST:event_calButtonActionPerformed

    private void balButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balButtonActionPerformed
        calBalance();// TODO add your handling code here:
    }//GEN-LAST:event_balButtonActionPerformed

    private void custIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custIdTextActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearHire();// TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void hireTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hireTableMouseClicked
        searchHire();// TODO add your handling code here:
    }//GEN-LAST:event_hireTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel advLabel;
    private javax.swing.JTextField advText;
    private javax.swing.JButton balButton;
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JTextField balenceText;
    private javax.swing.JPanel basePanel;
    private javax.swing.JButton calButton;
    private javax.swing.JLabel carDataLabel;
    private javax.swing.JLabel carIdLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel custDataLabel;
    private javax.swing.JLabel custIdLabel;
    private javax.swing.JTextField custIdText;
    private javax.swing.JLabel date1Label;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel formPanel;
    private javax.swing.JPanel formPanel1;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel headerlabel;
    private javax.swing.JTable hireTable;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JTextField idText;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel perDayRentLabel;
    private javax.swing.JTextField perDayRentText;
    private javax.swing.JLabel refundLabel;
    private javax.swing.JTextField refundText;
    private javax.swing.JLabel rentELabel;
    private javax.swing.JLabel rentSLabel;
    private javax.swing.JTextField rentSText;
    private javax.swing.JTextField rentText;
    private javax.swing.JLabel rentidLabel;
    private javax.swing.JTextField rentidText;
    private javax.swing.JCheckBox returnCheckBox;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField totalText;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameLabel1;
    // End of variables declaration//GEN-END:variables
    private void loadAllHires() {
        try {
        String[] columns = {"HireId","CarID","Cust ID", "Rental Start", "Rental End", "Total Amount", "Refund", "Advanced", "PerDayRent","Return"};
        DefaultTableModel dtm = new DefaultTableModel(columns, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        hireTable.setModel(dtm); // Set the model for hireTable

        // Retrieve rental details from rentalController
        ArrayList<RentalDetailDto> hires = rentalController.getAllHires();

        // Populate the table with rental details
        for (RentalDetailDto hire : hires) {
             if (!hire.getReturned()) { // Check if the car is available
                String returned = "not Returned";
            Object[] rowData = {
                hire.getRentalId(),
                hire.getCarId(),
                hire.getCustId(),
                hire.getRentalStartDate(),
                hire.getRentalEndDate(),
                hire.getTotalAmount(),
                hire.getRefund(),
                hire.getAdvancedPay(),
                hire.getPerDayRent(),
               returned
            };
            dtm.addRow(rowData); // Add each row to the table model
        }}
    } catch (Exception ex) {
        // Handle exceptions
        java.util.logging.Logger.getLogger(HirePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }
    }
    private void updateHire() {
         try {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); 
        Date rentDate = dateFormat.parse(rentSText.getText());
        Date rentDate1 = dateFormat.parse(rentText.getText());
        
      
        
        long timeDifference = Math.abs(rentDate1.getTime() - rentDate.getTime());
        long daysDifference = TimeUnit.DAYS.convert(timeDifference, TimeUnit.MILLISECONDS);
        
         
        if (daysDifference > 30) {
            JOptionPane.showMessageDialog(this, "Rental period cannot exceed 30 days.");
            return; // Exit the method if the rental period is too long
        }

        double perDayRent = Double.parseDouble(perDayRentText.getText());

        // Calculate the total amount
        double totalAmount = perDayRent * daysDifference;
        
        double advancedPayment = Double.parseDouble(advText.getText());
        
        // Calculate the balance amount
        double balanceAmount = totalAmount - advancedPayment;
        

        RentalDetailDto rentalDetailDto = new RentalDetailDto(
            rentidText.getText(),
            Double.parseDouble(advText.getText()),
                
            balanceAmount,
            
            perDayRent, // Set the perDayRent
            Double.parseDouble(refundText.getText()),
            rentDate1,
            rentDate,
            returnCheckBox.isSelected(),
            totalAmount ,// Set the totalAmount
                
            //Integer.parseInt(idText.getText()),
                idText.getText(),
                custIdText.getText()
        );
         String result = rentalDetailController.updateHire(rentalDetailDto);
         updateCarAvailability(idText.getText(), true);
         JOptionPane.showMessageDialog(this, result);
            clearHire();
            loadAllHires();
       
        
    } catch (ParseException ex) {
        java.util.logging.Logger.getLogger(CustomerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error parsing date: " + ex.getMessage());
    } catch (Exception ex) {
        java.util.logging.Logger.getLogger(CustomerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }    }
    
  

    private void returned() {
        try {
        
        if (returnCheckBox.isSelected()) {
            String carId = idText.getText();
            carController.updateCarAvailability(carId, true);
            updateCarAvailability(carId, true);
            //clearHire();
            
            returnCheckBox.setSelected(true);
        }
    } catch (Exception ex) {
        java.util.logging.Logger.getLogger(CustomerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }     }
    
     private void updateCarAvailability(String Id, boolean isAvailability) {
       try {
        // Assuming you have a method in your CarController to update car availability
        carController.updateCarAvailability(Id, isAvailability);
    } catch (Exception ex) {
        // Handle any exceptions if the update fails
        ex.printStackTrace();
    }   }

    
    
    private void calTotal() {
        try {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date rentDate = dateFormat.parse(rentSText.getText());
        Date rentDate1 = dateFormat.parse(rentText.getText());

        long timeDifference = Math.abs(rentDate1.getTime() - rentDate.getTime());
        long daysDifference = TimeUnit.DAYS.convert(timeDifference, TimeUnit.MILLISECONDS);

        if (daysDifference > 30) {
            JOptionPane.showMessageDialog(this, "Rental period cannot exceed 30 days.");
            return; // Exit the method if the rental period is too long
        }

        double perDayRent = Double.parseDouble(perDayRentText.getText());

        // Calculate the total amount
        double totalAmount = perDayRent * daysDifference;

        // Display the total amount in the totalTextFeild
        totalText.setText(String.format("%.2f", totalAmount)); // Assuming totalTextFeild is a JTextField

    } catch (ParseException ex) {
        java.util.logging.Logger.getLogger(CustomerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error parsing date: " + ex.getMessage());
    } catch (Exception ex) {
        java.util.logging.Logger.getLogger(CustomerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }
    }

    private void calBalance() {
         try {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date rentDate = dateFormat.parse(rentSText.getText());
        Date rentDate1 = dateFormat.parse(rentText.getText());

        long timeDifference = Math.abs(rentDate1.getTime() - rentDate.getTime());
        long daysDifference = TimeUnit.DAYS.convert(timeDifference, TimeUnit.MILLISECONDS);

        if (daysDifference > 30) {
            JOptionPane.showMessageDialog(this, "Rental period cannot exceed 30 days.");
            return; // Exit the method if the rental period is too long
        }

        double perDayRent = Double.parseDouble(perDayRentText.getText());

        // Calculate the total amount
        double totalAmount = perDayRent * daysDifference;
        
         double advancedPayment = Double.parseDouble(advText.getText());
        
        // Calculate the balance amount
        double balanceAmount = totalAmount - advancedPayment;

        // Display the total amount in the totalTextFeild
        balenceText.setText(String.format("%.2f", balanceAmount)); // Assuming totalTextFeild is a JTextField

    } catch (ParseException ex) {
        java.util.logging.Logger.getLogger(CustomerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error parsing date: " + ex.getMessage());
    } catch (Exception ex) {
        java.util.logging.Logger.getLogger(CustomerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }    }

    private void clearHire() {
         rentidText.setText("");
        advText.setText("");
        balenceText.setText("");
        custIdText.setText("");
        idText.setText("");
        perDayRentText.setText("");
        refundText.setText("");

        rentText.setText("");
        rentSText.setText("");
        returnCheckBox.setSelected(false);
        totalText.setText("");
    }

    private void searchHire() {
        try {
            String rentalId = hireTable.getValueAt(hireTable.getSelectedRow(), 0).toString();
            RentalDetailDto rentalDetailDto = rentalDetailController.getHire(rentalId);
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

            if (rentalDetailDto != null) {
                rentidText.setText(rentalDetailDto.getRentalId());

                advText.setText(Double.toString(rentalDetailDto.getAdvancedPay()));
                balenceText.setText(Double.toString(rentalDetailDto.getBalance()));
                custIdText.setText(rentalDetailDto.getCustId());
                idText.setText(rentalDetailDto.getCarId());
                perDayRentText.setText(Double.toString(rentalDetailDto.getPerDayRent()));
                refundText.setText(Double.toString(rentalDetailDto.getRefund()));

                rentText.setText(dateFormat.format(rentalDetailDto.getRentalEndDate()));
                rentSText.setText(dateFormat.format(rentalDetailDto.getRentalStartDate()));
                returnCheckBox.setSelected(false);
                totalText.setText(Double.toString(rentalDetailDto.getTotalAmount()));

            } else {
                JOptionPane.showMessageDialog(this, "Customer Not Found");
            }

        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(UpdateHirePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    

    

    
}
